<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_InvoiceReportPageUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_GlFromDateValue" Type="InArgument(x:Int32)" />
    <x:Property Name="in_GlToDateValue" Type="InArgument(x:Int32)" />
    <x:Property Name="in_DelayBefore" Type="InArgument(x:Int32)" />
    <x:Property Name="in_DelayAfter" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Timeout" Type="InArgument(x:Int32)" />
    <x:Property Name="in_NumberOfRetries" Type="InArgument(x:Int32)" />
    <x:Property Name="in_RetryInterval" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="io_ItemDetailsPath" Type="InOutArgument(x:String)" />
    <x:Property Name="io_WithoutItemDetailsPath" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1150,1659.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="386,1594.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.Data.DataTable]" Name="dt_FlatFile" />
      <Variable x:TypeArguments="x:String" Name="withoutItemDetailsPath" />
      <Variable x:TypeArguments="x:String" Name="withItemDetailsPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="344,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process&quot;]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Download files without item details" DisplayName="Invoke DownloadFlaFileFromTsiPortal workflow - Without item details" sap:VirtualizedContainerService.HintSize="344,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="TSIPortal\DownloadFlaFileFromTsiPortal.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ItemDetailsFlag">
          <Literal x:TypeArguments="x:Boolean" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceReportPageUrl">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;InvoiceReportPageUrl&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_GlFromDateValue">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;GlFromDateValue&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_GlToDateValue">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;GlToDateValue&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;TSIInvoiceDetailsPageNotAvailableException&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_DelayBefore">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;DelayBefore&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_DelayAfter">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;DelayAfter&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_Timeout">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;Timeout&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_NumberOfRetries">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;RetryInterval&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
          <mva:VisualBasicValue x:TypeArguments="x:TimeSpan" ExpressionText="TimeSpan.Parse(in_Config(&quot;RetryInterval&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FlatFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;WithoutItemDetailsPath&quot;).ToString+DateTime.Now.ToString(&quot;MMMyyyy&quot;)" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_FilePath">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="withoutItemDetailsPath" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Download files with item details" DisplayName="Invoke DownloadFlaFileFromTsiPortal workflow - with item details" sap:VirtualizedContainerService.HintSize="344,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="TSIPortal\DownloadFlaFileFromTsiPortal.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ItemDetailsFlag">
          <Literal x:TypeArguments="x:Boolean" Value="True" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceReportPageUrl">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;InvoiceReportPageUrl&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_GlFromDateValue">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;GlFromDateValue&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_GlToDateValue">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;GlToDateValue&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;TSIInvoiceDetailsPageNotAvailableException&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_DelayBefore">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;DelayBefore&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_DelayAfter">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;DelayAfter&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_Timeout">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(in_Config(&quot;Timeout&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_NumberOfRetries">
          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(in_Config(&quot;NumberOfRetries&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
          <mva:VisualBasicValue x:TypeArguments="x:TimeSpan" ExpressionText="TimeSpan.Parse(in_Config(&quot;RetryInterval&quot;).ToString)" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FlatFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;WithItemDetailsPath&quot;).ToString+DateTime.Now.ToString(&quot;MMMyyyy&quot;)" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_FilePath">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="withItemDetailsPath" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Flat file without items details" DisplayName="Invoke ChceckRecordsFromFlatFile workflow - without item details" sap:VirtualizedContainerService.HintSize="344,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="TSIPortal\ChceckRecordsFromFlatFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FlatFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="withoutItemDetailsPath" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;NoRecordsFoundInFlatFileException&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_FlatFile">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_FlatFile" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Subject">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;NoRecordsFoundInFlatFileSubject&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Body">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;NoRecordsFoundInFlatFileBody&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Validate colums from without item details file" DisplayName="Invoke ValidateRequiredColumns workflow - without item details" sap:VirtualizedContainerService.HintSize="344,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="TSIPortal\ValidateRequiredColumns.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_RequiredFlatFileColumn">
          <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="in_Config(&quot;WithoutItemDetailsColumn&quot;).ToString.Split(&quot;,&quot;c)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;TSIColumnNameIsMissingException&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_FlatFille">
          <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_FlatFile" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Flat file with items details" DisplayName="Invoke ChceckRecordsFromFlatFile workflow - with item details" sap:VirtualizedContainerService.HintSize="344,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="TSIPortal\ChceckRecordsFromFlatFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FlatFilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="withItemDetailsPath" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;NoRecordInItemFileException&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_FlatFile">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_FlatFile" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Subject">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;NoRecordInItemFileSubject&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Body">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;NoRecordInItemFileBody&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Validate colums from with item details file" DisplayName="Invoke ValidateRequiredColumns workflow - with item details" sap:VirtualizedContainerService.HintSize="344,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="TSIPortal\ValidateRequiredColumns.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_RequiredFlatFileColumn">[in_Config("WithItemDetailsColumn").ToString.Split(","c)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">[in_Config("TSIColumnNameIsMissingException").ToString]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_FlatFille">[dt_FlatFile]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="344,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476,422.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:RenameFileX DisplayName="Rename File: Without item details" FilePath="[in_Config(&quot;DirectoryPath&quot;).ToString+Environment.UserName+in_Config(&quot;FolderPath&quot;).ToString+DateTime.Now.ToString(&quot;MMMyyyy&quot;)+&quot;\&quot;+DateTime.Now.ToString(&quot;ddMMMyyyy&quot;)+&quot;\&quot;+in_Config(&quot;FlatFileNameWithItemDetails&quot;).ToString+&quot;.xls&quot;]" sap:VirtualizedContainerService.HintSize="434,145.333333333333" sap2010:WorkflowViewState.IdRef="RenameFileX_3" KeepExtension="True" NewName="[in_Config(&quot;DirectoryPath&quot;).ToString+Environment.UserName+in_Config(&quot;FolderPath&quot;).ToString+DateTime.Now.ToString(&quot;MMMyyyy&quot;)+&quot;\&quot;+DateTime.Now.ToString(&quot;ddMMMyyyy&quot;)+&quot;\&quot;+in_Config(&quot;FlatFileNameWithoutItemDetails&quot;).ToString+&quot;_&quot;+DateTime.Now.ToString(&quot;ddMMMyyyy_hhmmss&quot;)+&quot;.xls&quot;]" />
          <ui:RenameFileX DisplayName="Rename File: With item details" FilePath="[in_Config(&quot;DirectoryPath&quot;).ToString+Environment.UserName+in_Config(&quot;FolderPath&quot;).ToString+DateTime.Now.ToString(&quot;MMMyyyy&quot;)+&quot;\&quot;+DateTime.Now.ToString(&quot;ddMMMyyyy&quot;)+&quot;\&quot;+in_Config(&quot;FlatFileNameWithoutItemDetails&quot;).ToString+&quot;.xls&quot;]" sap:VirtualizedContainerService.HintSize="434,145.333333333333" sap2010:WorkflowViewState.IdRef="RenameFileX_4" KeepExtension="True" NewName="[in_Config(&quot;DirectoryPath&quot;).ToString+Environment.UserName+in_Config(&quot;FolderPath&quot;).ToString+DateTime.Now.ToString(&quot;MMMyyyy&quot;)+&quot;\&quot;+DateTime.Now.ToString(&quot;ddMMMyyyy&quot;)+&quot;\&quot;+in_Config(&quot;FlatFileNameWithItemDetails&quot;).ToString+&quot;_&quot;+DateTime.Now.ToString(&quot;ddMMMyyyy_hhmmss&quot;)+&quot;.xls&quot;]" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:Comment DisplayName="Comment (placeholder)" sap:VirtualizedContainerService.HintSize="344,55.3333333333333" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//  Invoke steps of the process" />
  </Sequence>
</Activity>